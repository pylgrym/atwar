#!/usr/bin/env node
var debug = require('debug')('xp1');
var app = require('../app');

var io, socket, server;

app.set('port', process.env.PORT || 3000);

server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

// Added this:
io = require('socket.io');  // JG, added in www script.
io_socket = io.listen(server); // JG, added in www script.


var shame1=1;
function idCounter() {
  var tmp  = shame1;
  shame1 += 1;
  return tmp;
}

var mobs = {} // (second shame - move to module.)

io_socket.on('connection', function (c_socket) {
    var mySocketId = idCounter();
    
    c_socket.emit('welcome', { 
      message: 'Initial welcome', 
      newClientId: mySocketId,
      initModel: mobs
    });

    c_socket.on('move-c-s', function (data) {
        console.log('on move', data);

        mobs[data.id] = data; // keep an updated model here. // FIXME: We only update model after first move! Proposal:  clients should do an initial no-op move after welcome?

        c_socket.broadcast.emit('move-s-c', data);
    });

    // setInterval( function() { socket.emit('message', {'date': new Date()}); }, 10000);    
});

